@using AssignmentManager.Data
@model AssignmentManager.Data.Models.Assignment
@{
    ViewData["Title"] = "New Assignment";
    var db = (AssignmentManagerDbContext)ViewBag.Context;
}

<link rel="stylesheet" href="/css/assignments/create.css" />

<script>
    const scheduleTab = document.getElementsByClassName("nav_option--schedule")[0];
    const classesTab = document.getElementsByClassName("nav_option--classes")[0];

    scheduleTab.classList.add("nav_option--active");
</script>

<h1 class="main_title">NEW ASSIGNMENT</h1>

<form asp-action="Create" class="create_assignment">
    <div class="create_assignment__l">
        <div class="create_assignment__l__name">
            <label class="form_label" asp-for="Name">Assignment Title</label>
            <input class="form_input" asp-for="Name" placeholder="Title" />
            <span asp-validation-for="Name" class="validation_error"></span>
        </div>

        <div class="create_assignment__l__due_date">
            <label class="form_label" asp-for="DueDate">Due Date</label>
            <input class="form_input" type="date" asp-for="DueDate" />
            <span asp-validation-for="DueDate" class="validation_error"></span>
        </div>

        <div class="create_assignment__l__class">
            <label class="form_label" asp-for="ClassId">Class</label>
            @{
                if (!db.Classes.Any())
                {
                    <select style="appearance: none; color: #22222288; pointer-events: none" class="form_input" asp-for="ClassId">
                        <option value="0" disabled selected>NO CLASSES</option>
                    </select>
                }
                else
                {
                    <select class="form_input" asp-for="ClassId">
                        @{
                            var classes = db.Classes.Select(x => new
                            {
                                x.Id,
                                x.Name
                            })
                            .OrderBy(x => x.Id)
                            .ToList();

                            for (var i = 0; i < classes.Count; i++)
                            {
                                <option value="@classes[i].Id">@classes[i].Name</option>
                            }
                        }
                    </select>
                }
            }

            <span asp-validation-for="ClassId" class="validation_error"></span>
        </div>
    </div>
    <div class="create_assignment__description">
        <label class="form_label" asp-for="Description">Description</label>
        <textarea asp-for="Description" placeholder="Description (optional)"></textarea>
    </div>

    <div>
        <button type="submit" class="save">
            <img src="/content/save.png" />
        </button>
    </div>
</form>
@using System.Globalization
@using AssignmentManager.Data

@model List<AssignmentManager.Web.ViewModels.Assignment.AssignmentDetailsViewModel>
@{
    ViewData["Title"] = "Completed";
}

<link rel="stylesheet" href="/css/assignments/completed.css" />

<script>
    const scheduleTab = document.getElementsByClassName("nav_option--schedule")[0];
    const classesTab = document.getElementsByClassName("nav_option--classes")[0];

    scheduleTab.classList.add("nav_option--active");
</script>

<h1 class="main_title">COMPLETED</h1>

<div class="assignments_container assignments_container--completed">
    @{
        if (Model.Where(x => x.IsCompleted == true).Count() > 0)
        {
            <div class="status_arrow status_arrow--completed">
                <img src="/content/upcomingArrowBG.svg" />
                <span>COMPLETED</span>
            </div>
        }

        if (Model.Where(x => x.IsCompleted == true).Count() == 0)
        {
            <div class="no_completed_assignments">
                <img class="blue_cat" src="/content/blueCatShadow.svg">
                <div>
                    <h2>NO COMPLETED ASSIGNMENTS</h2>
                    <span>Complete an assignment for it to appear here.</span>
                </div>
            </div>
        }

        foreach (var item in Model.OrderBy(x => x.DueDate))
        {
            <a asp-controller="Assignments" asp-action="Details" asp-route-id="@item.Id">
                <div class="assignment">
                    <div style="background: @Html.DisplayFor(modelItem => item.ColorHex)" class="assignment__color_tag"></div>
                    <span class="assignment__name">@Html.DisplayFor(modelItem => item.Name)</span>
                    <span class="assignment__due_date">@Html.DisplayFor(modelItem => item.DueDateMessage)</span>
                    <img class="assignment__arrow" src="/content/classArrow.svg" />
                </div>
            </a>
        }
    }
</div>
